name: libvirt
on: [ workflow_dispatch ]
jobs:
  # x86_64
  x64:
    name: Checkout libvirt setup
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - run: id;uname -a; df -h; cat /etc/os-release; pwd; mount; sudo apparmor_status || true
      - run: sudo DEBIAN_FRONTEND=noninteractive apt update
      # - run: sudo DEBIAN_FRONTEND=noninteractive apt upgrade
      # - run: sudo DEBIAN_FRONTEND=noninteractive apt install apparmor-utils
      - run: sudo DEBIAN_FRONTEND=noninteractive apt install tmate
      - run: sudo DEBIAN_FRONTEND=noninteractive apt install libvirt-daemon libvirt-daemon-system libvirt-clients 
      - run: systemctl status libvirtd
      - run: sudo virsh -c qemu:///system list --all
      - run: sudo DEBIAN_FRONTEND=noninteractive apt install qemu-system-misc u-boot-qemu
      - run: sudo virsh -c qemu:///system capabilities
      - run: sudo DEBIAN_FRONTEND=noninteractive apt install podman podman-compose
      - run: podman run --rm hello-world
      - run: sudo apparmor_status
      - run: sudo ls -lah /etc/apparmor.d/
      - run: sudo ln -s /etc/apparmor.d/usr.sbin.libvirtd /etc/apparmor.d/disable/
      - run: sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.libvirtd
      - run: sudo ln -s /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
      - run: sudo apparmor_parser -R /etc/apparmor.d/usr.lib.libvirt.virt-aa-helper
      - run: sudo bash -c 'echo "security_driver = []" >> /etc/libvirt/qemu.conf'
      - run: sudo bash -c 'echo >> /etc/libvirt/qemu.conf'
      - run: sudo cat /etc/libvirt/qemu.conf
      - run: sudo systemctl restart libvirtd.service
      - run: sudo ln -s /etc/apparmor.d/podman /etc/apparmor.d/disable/
      - run: sudo apparmor_parser -R /etc/apparmor.d/podman
      # - run: sudo aa-disable /etc/apparmor.d/libvirtd
      - run: sudo apparmor_status
      - run: systemctl status libvirtd
      - run: bash -c 'sudo adduser $USER libvirt'
      - run: bash libvirt/setup.sh
      - run: ls -lah ./libvirt/
      - run: ls -lah ./libvirt/workdir
      - run: ls -lah ./libvirt/vagrant.d
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3.19
      #   with:
      #     install-dependencies: false
      - run: bash libvirt/run.sh vagrant version
      - name: Attempt to download RISCV64 box
        uses: actions/download-artifact@v4.1.8
        with:
          run-id: "11352522785"
          github-token: ${{ github.token }}
          repository: "AlexTalker/vagrant-libvirt-ubuntu-riscv-box-draft"
          path: libvirt/workdir/
      - run: ls -lah libvirt/workdir/*
      - run: bash libvirt/run.sh -c id
      - run: bash libvirt/run.sh -c 'ls -lah .'
      - run: bash libvirt/run.sh -c 'ls -lah /var/run/libvirt/'
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant box add ubuntu_riscv_2404 vagrant-libvirt-ubuntu/ubuntu-riscv-24.04.1.box
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant box list
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3.19
      #   with:
      #     install-dependencies: false
      - run: sync
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant up
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant status
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant ssh -- uname -a
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant ssh -- cat /etc/os-release
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3.19
        with:
          install-dependencies: false
      - run: bash libvirt/sudo.sh bash libvirt/run.sh vagrant destroy
